{"version":3,"file":"common.js","sources":["../../../src/common.ts"],"sourcesContent":["/* 基础数据类型 */\n\n/**\n * 检查值是否为布尔类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是布尔类型则返回 true，否则返回 false。\n */\nexport function isBoolean(value: any): boolean {\n  return typeof value === 'boolean';\n}\n\n/**\n * 检查值是否为数字类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是数字类型则返回 true，否则返回 false。\n */\nexport function isNumber(value: any): boolean {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * 检查值是否为字符串类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是字符串类型则返回 true，否则返回 false。\n */\nexport function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\n/**\n * 检查值是否为 undefined。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 undefined 则返回 true，否则返回 false。\n */\nexport function isUndefined(value: any): boolean {\n  return typeof value === 'undefined';\n}\n\n/**\n * 检查值是否为 null。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 null 则返回 true，否则返回 false。\n */\nexport function isNull(value: any): boolean {\n  return value === null;\n}\n\n/**\n * 检查值是否为 Symbol 类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 Symbol 类型则返回 true，否则返回 false。\n */\nexport function isSymbol(value: any): boolean {\n  return typeof value === 'symbol';\n}\n\n/**\n * 检查值是否为 NaN。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 NaN 则返回 true，否则返回 false。\n */\nexport function isNaN(value: any): boolean {\n  return Number.isNaN(value);\n}\n\n/**\n * 检查值是否为整数。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是整数则返回 true，否则返回 false。\n */\nexport function isInt(value: any): boolean {\n  return isNumber(value) && Number.isInteger(value);\n}\n\n/**\n * 检查值是否为偶数。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是偶数则返回 true，否则返回 false。\n */\nexport function isEven(value: any): boolean {\n  return isNumber(value) && value % 2 === 0;\n}\n\n/**\n * 检查值是否为奇数。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是奇数则返回 true，否则返回 false。\n */\nexport function isOdd(value: any): boolean {\n  return isNumber(value) && value % 2 === 1;\n}\n\n/**\n * 检查值是否为正数。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是正数则返回 true，否则返回 false。\n */\nexport function isPositiveNumber(value: any): boolean {\n  return isNumber(value) && value > 0;\n}\n\n/**\n * 检查值是否为负数。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是负数则返回 true，否则返回 false。\n */\nexport function isNegativeNumber(value: any): boolean {\n  return isNumber(value) && value < 0;\n}\n\n/**\n * 检查值是否为基本数据类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是基本数据类型则返回 true，否则返回 false。\n */\nexport function isBaseType(value: any): boolean {\n  const methods = [isNumber, isString, isBoolean, isUndefined, isNull, isSymbol];\n  return methods.some(method => method(value));\n}\n\n/* 其他数据类型 */\n\n/**\n * 检查值是否为 Map 类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 Map 类型则返回 true，否则返回 false。\n */\nexport function isMap(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object Map]';\n}\n\n/**\n * 检查值是否为 WeakMap 类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 WeakMap 类型则返回 true，否则返回 false。\n */\nexport function isWeakMap(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object WeakMap]';\n}\n\n/**\n * 检查值是否为 Set 类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 Set 类型则返回 true，否则返回 false。\n */\nexport function isSet(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object Set]';\n}\n\n/**\n * 检查值是否为 WeakSet 类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是 WeakSet 类型则返回 true，否则返回 false。\n */\nexport function isWeakSet(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object WeakSet]';\n}\n\n/**\n * 检查值是否为数组。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是数组则返回 true，否则返回 false。\n */\nexport function isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\n/**\n * 检查数组是否为空。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是空数组则返回 true，否则返回 false。\n */\nexport function isEmptyArray(value: any): boolean {\n  return isArray(value) && value.length === 0;\n}\n\n/**\n * 检查值是否为普通对象。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是普通对象则返回 true，否则返回 false。\n */\nexport function isPlainObject(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object Object]' && value !== null;\n}\n\n/**\n * 检查对象是否为空。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是空对象则返回 true，否则返回 false。\n */\nexport function isEmptyObject(value: any): boolean {\n  return isPlainObject(value) && Object.keys(value).length === 0;\n}\n\n/**\n * 检查值是否为对象（包括文件、日期、函数、正则等）。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是对象则返回 true，否则返回 false。\n */\nexport function isObject(value: any): boolean {\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * 检查值是否为日期类型。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是日期类型则返回 true，否则返回 false。\n */\nexport function isDate(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object Date]';\n}\n\n/**\n * 检查值是否为函数。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是函数则返回 true，否则返回 false。\n */\nexport function isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\n/**\n * 检查值是否为有效日期。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是有效日期则返回 true，否则返回 false。\n */\nexport function isValidDate(value: any): boolean {\n  return !isNaN(Date.parse(value));\n}\n\n/**\n * 检查值是否为错误对象。\n * @param {any} value - 要检查的值。\n * @returns {boolean} - 如果值是错误对象则返回 true，否则返回 false。\n */\nexport function isError(value: any): boolean {\n  return Object.prototype.toString.call(value) === '[object Error]';\n}\n\n/**\n * 检查值是否为 HTML 元素。\n * @param {any} element - 要检查的值。\n * @returns {boolean} - 如果值是 HTML 元素则返回 true，否则返回 false。\n */\nexport function isHTMLElement(element: any): boolean {\n  return element instanceof HTMLElement;\n}\n\n/**\n * 检查当前环境是否为浏览器。\n * @returns {boolean} - 如果当前环境为浏览器则返回 true，否则返回 false。\n */\nexport function isBrowser(): boolean {\n  return typeof window === 'object' && typeof document === 'object' && document.nodeType === 9;\n}\n\n/**\n * 检查当前环境是否为 Node.js。\n * @returns {boolean} - 如果当前环境为 Node.js 则返回 true，否则返回 false。\n */\nexport function isNode(): boolean {\n  return typeof process === 'object' && Object.prototype.toString.call(process) === '[object process]';\n}\n\n/**\n * 检查年份是否为闰年。\n * @param {number} year - 要检查的年份。\n * @returns {boolean} - 如果年份是闰年则返回 true，否则返回 false。\n */\nexport function isLeapYear(year: number): boolean {\n  if (!isNumber(year)) {\n    return false;\n  }\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nconst ua = window.navigator.userAgent;\n\n/**\n * 当前环境信息映射。\n */\nexport const envMap = {\n  isPC: !ua.includes('Android') && !ua.includes('iPhone'),\n  isMobile: ua.includes('Android') || ua.includes('iPhone'),\n  isAndroid: ua.includes('Android'),\n  isIPhone: ua.includes('iPhone'),\n  isIPad: ua.includes('iPad'),\n};\n"],"names":[],"mappings":"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"}
{"version":3,"file":"regexp.js","sources":["../../../src/regexp.ts"],"sourcesContent":["/**\n * 手机号正则表达式\n */\nexport const phoneRegexp = /^1\\d{10}$/;\n\n/**\n * 校验输入的字符串是否为有效的手机号\n *\n * @param {any} phone - 待校验的手机号\n * @returns {boolean} - 如果是有效的手机号返回 true，否则返回 false\n *\n * @example\n * const valid = isPhone('13812345678');\n * console.log(valid); // 输出: true\n */\nexport function isPhone(phone: any): boolean {\n  return phoneRegexp.test(String(phone)); // 将输入转换为字符串\n}\n\n/**\n * 邮箱正则表达式\n */\nexport const emailRegexp = /^[0-9a-zA-Z]+@[0-9a-zA-Z\\-]+\\.[0-9a-zA-Z]+$/;\n\n/**\n * 校验输入的字符串是否为有效的邮箱地址\n *\n * @param {string} email - 待校验的邮箱地址\n * @returns {boolean} - 如果是有效的邮箱地址返回 true，否则返回 false\n *\n * @example\n * const valid = isEmail('test@example.com');\n * console.log(valid); // 输出: true\n */\nexport function isEmail(email: string): boolean {\n  return emailRegexp.test(email);\n}\n\n/**\n * 字符串是否为数字的正则表达式\n */\nexport const stringNumberRegexp = /^\\d+$/;\n\n/**\n * 校验输入的字符串是否为有效的数字字符串\n *\n * @param {string} str - 待校验的字符串\n * @returns {boolean} - 如果是有效的数字字符串返回 true，否则返回 false\n *\n * @example\n * const valid = stringNumberRegexp.test('12345');\n * console.log(valid); // 输出: true\n */\nexport function isStringNumber(str: string | number): boolean {\n  return stringNumberRegexp.test(String(str));\n}\n"],"names":[],"mappings":"AAAA;;AAEG;AACI,IAAM,WAAW,GAAG,YAAY;AAEvC;;;;;;;;;AASG;AACG,SAAU,OAAO,CAAC,KAAU,EAAA;IAChC,OAAO,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACzC,CAAC;AAED;;AAEG;AACI,IAAM,WAAW,GAAG,8CAA8C;AAEzE;;;;;;;;;AASG;AACG,SAAU,OAAO,CAAC,KAAa,EAAA;AACnC,IAAA,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,CAAC;AAED;;AAEG;AACI,IAAM,kBAAkB,GAAG,QAAQ;AAE1C;;;;;;;;;AASG;AACG,SAAU,cAAc,CAAC,GAAoB,EAAA;IACjD,OAAO,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C;;;;"}